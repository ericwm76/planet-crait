{"version":3,"sources":["apiCalls.js","initialData.js","components/Movie/Movie.js","components/SideBar/SideBar.js","components/MoviesContainer/MoviesContainer.js","components/Character/Character.js","components/ScrollText/ScrollText.js","components/CharactersContainer/CharactersContainer.js","components/FavouritesContainer/FavouritesContainer.js","components/LandingPage/LandingPage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["getMovieData","movieUrl","fetch","then","response","json","movieData","getCharacters","characterUrls","char","slice","map","characterUrl","characterObj","films","homeworld","species","promise1","getFilms","filmTitle","promise2","getHomeworld","worldObj","homeWorldName","name","homeWorldPop","population","promise3","getSpecies","speciesObj","Promise","all","data","homeworldName","homeworldPop","appearsIn","favorited","worldUrl","homeWorld","filmUrls","filmUrl","filmObj","title","initialMovies","url","episode_id","release_date","img","crawl","Movie","id","year","selectMovie","className","onClick","src","alt","to","SideBar","quote","rank","exact","MoviesContainer","movieCards","movie","key","Character","character","updateFavourites","film","i","ScrollText","props","opening_crawl","CharactersContainer","characters","charactersPresent","characterCards","FavouritesContainer","favourites","length","LandingPage","handleChange","e","preventDefault","setState","target","value","updateName","setUsers","state","level","this","isEnabled","type","placeholder","onChange","disabled","Component","App","moviePresent","console","log","path","render","Boolean","window","location","hostname","match","router","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.435c33b2.chunk.js","sourcesContent":["export const getMovieData = (movieUrl) => {\n   return fetch(movieUrl)\n     .then(response => response.json())\n     .then(movieData => movieData)\n}\n\nexport const getCharacters = (characterUrls) => {\n   const char = characterUrls.slice(0, 10).map((characterUrl) => {\n       return fetch(characterUrl)\n         .then(response => response.json())\n         .then(characterObj => {\n            const { films, homeworld, species } = characterObj;\n            let promise1 = getFilms(films).then(filmTitle => filmTitle);\n            let promise2 = getHomeworld(homeworld).then(worldObj => ({homeWorldName: worldObj.name, homeWorldPop: worldObj.population}));\n            let promise3 = getSpecies(species).then(speciesObj => speciesObj.name)\n            return Promise.all([promise1, promise2, promise3]).then(data => ({name: characterObj.name, species: data[2], homeworldName: data[1].homeWorldName, homeworldPop: data[1].homeWorldPop, appearsIn: data[0], favorited: false}))\n         })\n   }) \n\n   return Promise.all(char);\n}\n\nexport const getHomeworld = worldUrl => {\n   return fetch(worldUrl)\n   .then(response => response.json())\n   .then(homeWorld => ({ name: homeWorld.name, population: homeWorld.population }));\n}\n\nexport const getFilms = filmUrls => {\n   const films = filmUrls.map(filmUrl => {\n      return fetch(filmUrl)\n      .then(response => response.json())\n      .then(filmObj => filmObj.title)\n   })\n   return Promise.all(films);\n}\n\nexport const getSpecies = species => {\n   return fetch(species[0])\n   .then(response => response.json())\n   .then(species => species)\n}","const initialMovies = [\n  {\n    url: \"https://swapi.co/api/films/4/\",\n    episode_id: 1,\n    title: \"The Phantom Menace\",\n    release_date: \"1999\",\n    img: \"https://images-na.ssl-images-amazon.com/images/I/51o6zchqOFL.jpg\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  },\n  {\n    url: \"https://swapi.co/api/films/5/\",\n    episode_id: 2,\n    title: \"Attack of the Clones\",\n    release_date: \"2002\",\n    img: \"https://images-na.ssl-images-amazon.com/images/I/51vGOd37gmL._SY445_.jpg\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  },\n  {\n    url: \"https://swapi.co/api/films/6/\",\n    episode_id: 3,\n    title: \"Revenge of the Sith\",\n    release_date: \"2005\",\n    img: \"https://images-na.ssl-images-amazon.com/images/I/61UpAncAQbL._SY679_.jpg\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  },\n  {\n    url: \"https://swapi.co/api/films/1/\",\n    episode_id: 4,\n    title: \"A New Hope\",\n    release_date: \"1977\",\n    img: \"https://cdn2.bigcommerce.com/n-nr1m3w/b72t4x/products/91670/images/99628/13828__18178.1506102502.380.500.jpg?c=2\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  },\n  {\n    url: \"https://swapi.co/api/films/2/\",\n    episode_id: 5,\n    title: \"The Empire Strikes Back\",\n    release_date: \"1980\",\n    img: \"https://images-na.ssl-images-amazon.com/images/I/51q8Jb98R4L.jpg\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  },\n  {\n    url: \"https://swapi.co/api/films/3/\",\n    episode_id: 6,\n    title: \"Return of the Jedi\",\n    release_date: \"1983\",\n    img: \"https://images-na.ssl-images-amazon.com/images/I/51tzSrztRIL.jpg\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  },\n  {\n    url: \"https://swapi.co/api/films/7/\",\n    episode_id: 7,\n    title: \"The Force Awakens\",\n    release_date: \"2015\",\n    img: \"https://imgc.allpostersimages.com/img/print/u-g-F8G58H0.jpg?w=550&h=550&p=0\",\n    crawl: \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victory against\\r\\nthe evil Galactic Empire.\\r\\n\\r\\nDuring the battle, Rebel\\r\\nspies managed to steal secret\\r\\nplans to the Empire's\\r\\nultimate weapon, the DEATH\\r\\nSTAR, an armored space\\r\\nstation with enough power\\r\\nto destroy an entire planet.\\r\\n\\r\\nPursued by the Empire's\\r\\nsinister agents, Princess\\r\\nLeia races home aboard her\\r\\nstarship, custodian of the\\r\\nstolen plans that can save her\\r\\npeople and restore\\r\\nfreedom to the galaxy....\"\n  }\n]\n\nexport default initialMovies;","import React from 'react';\nimport './Movie.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Movie = ({id, title, year, url, img, selectMovie}) => {\n  return (\n    <section className='movie' onClick={() => selectMovie(url)}>\n      <img src={img} alt={title} />\n      <h3>Episode {id}:</h3>\n      <h2>{title}</h2> \n      <h3>{year}</h3>\n      <Link to={`/movies/${id}`}>View Characters</Link>\n    </section>\n  )  \n}\n\nexport default Movie;\n\nMovie.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  url: PropTypes.string,\n  img: PropTypes.string,\n  selectMovie: PropTypes.func\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './SideBar.scss';\n\nconst SideBar = ({name, quote, rank}) => {\n  return (\n   <nav>\n     <section className='user-info'>\n       <div>\n         <img className='user-image' src='https://ksassets.timeincuk.net/wp/uploads/sites/55/2017/10/star-wars-8-porg-920x584.png' alt='porg' />\n       </div>\n       <div className='user-section'>\n         <h2>{name}</h2>\n         <p>{quote}</p> \n         <p>{rank}</p>\n       </div>\n     </section>\n\n     <section className='nav-links'>\n       <NavLink exact to='/movies' className='nav'> Movies </NavLink>\n       <NavLink exact to='/favourites' className='nav'> Favourites </NavLink>\n       <NavLink exact to='/' className='nav'> Sign out </NavLink>\n     </section>\n   </nav>\n  )\n}\n\nexport default SideBar;","import React from 'react';\nimport './MoviesContainer.scss';\nimport initialMovies from '../../initialData';\nimport Movie from '../Movie/Movie'\nimport SideBar from '../SideBar/SideBar';\n\nconst MoviesContainer = ({selectMovie, name, quote, rank}) => {\n  const movieCards = initialMovies.map(movie => {\n      return (<Movie \n        key={movie.episode_id} \n        id={movie.episode_id} \n        title={movie.title} \n        year={movie.release_date}\n        url={movie.url}\n        img={movie.img}\n        selectMovie={selectMovie}\n        />\n      )\n    })  \n\n  return (\n    <section className='movies-container'>\n      <SideBar name={name}\n               quote={quote}\n               rank={rank}/>\n      {movieCards}\n    </section>  \n  )\n}\n\nexport default MoviesContainer","import React from 'react';\nimport './Character.scss';\nimport PropTypes from 'prop-types';\n\nconst Character = ({ character, updateFavourites }) => {\n  const { name, species, homeworldName, homeworldPop, appearsIn } = character;\n  const films = appearsIn.map((film, i) => {\n    return (\n      <p key={i}>{film}</p>\n    )\n  })\n    \n  return (\n      <section className='character'>\n         <div className='favourite-button' onClick={() => updateFavourites(character)}>\n          <i className=\"fas fa-jedi\"></i>\n        </div>\n        <h2>Name:</h2>\n           <p>{name}</p>\n        <h2>Species: </h2>\n          {species}\n        <h2>Homeworld: </h2>\n          {homeworldName}\n        <h2>Population of Homeworld: </h2>\n           {homeworldPop}\n        <div className='related-films'>\n        <h2>Appears in: </h2>\n             {films}\n        </div>\n      </section>\n  )\n}\n\nexport default Character;\n\nCharacter.propTypes = { \n  name: PropTypes.string, \n  species: PropTypes.string, \n  homeworldName: PropTypes.string, \n  homeworldPop: PropTypes.string, \n  appearsIn: PropTypes.array, \n  favorited: PropTypes.bool \n}\n","import React from 'react';\nimport './ScrollText.scss';\nimport PropTypes from 'prop-types';\n\nconst ScrollText = (props) => {\n    const {episode_id, opening_crawl, title} = props.movie;\n    return (\n        <section className='scroll-text'>\n            <div className=\"fade\"></div>\n          <section className='star-wars'>\n              <div className='crawl'>\n                <div className='title'>\n                   <p>Episode {episode_id} </p>\n                   <h3>{title}</h3>\n                </div>\n                {opening_crawl}\n              </div>\n          </section>\n        </section>\n    )\n}\n\nexport default ScrollText;\n\nScrollText.propTypes = {\n  movie: PropTypes.object\n}","import React from 'react';\nimport './CharactersContainer.scss';\nimport Character from '../Character/Character';\nimport SideBar from '../SideBar/SideBar';\nimport ScrollText from '../ScrollText/ScrollText';\nimport PropTypes from 'prop-types';\n\nconst CharactersContainer = ({ characters, charactersPresent, movie, updateFavourites }) => {\n  const characterCards = characters.map((character, i) => {\n    return (\n      <Character\n        character={character}\n        updateFavourites={updateFavourites}\n        key={ i + character.name }\n      /> \n    )\n  })\n\n  return (\n    <section className='character-container'>\n      <SideBar />\n      {!charactersPresent && <img src='https://i.gifer.com/24S3.gif' alt='bb8 loader'/>}\n      {charactersPresent && <div><ScrollText movie={movie} /> {characterCards}</div>}\n    </section> \n  )\n}\n\nexport default CharactersContainer;\n\nCharactersContainer.propTypes = {\n  movie: PropTypes.object,\n  charactersPresent: PropTypes.bool, \n  characters: PropTypes.array,\n  name: PropTypes.string,\n  quote: PropTypes.string,\n  rank: PropTypes.string\n}","import React from 'react';\nimport './FavouritesContainer.scss';\nimport Favourite from '../Favourite/Favourite';\nimport SideBar from '../SideBar/SideBar';\nimport Character from '../Character/Character';\n\nconst FavouritesContainer = (props) => {\n  const noFavsMsg = () => {\n    if (props.favourites.length) {\n      return props.favourites.map((character, i) => {\n        return (\n          <Character\n          character={character}\n          updateFavourites={props.updateFavourites}\n          key={ i + character.name }\n          /> \n        )\n      })\n    } else {\n      return (\n      <p className=\"no-fav-msg\">Add some favourites!</p>\n      )\n    }\n  }\n    return (\n      <section className='Favourites-container'>\n        <SideBar />\n        {noFavsMsg()}\n      </section> \n    ) \n}\n\nexport default FavouritesContainer;","import React, { Component } from 'react';\nimport './LandingPage.scss';\nimport { Link } from 'react-router-dom';\n\nclass LandingPage extends Component {\n    constructor() {\n      super();\n      this.state = {\n        name: '',\n        quote: '',\n        level: ''\n      }\n    }\n\n    handleChange = (e) =>{\n      e.preventDefault();\n      this.setState({ [e.target.name] : e.target.value })\n    }\n\n    updateName = () => {\n       const { setUsers } = this.props;\n       setUsers(this.state.name, this.state.quote, this.state.level);\n    }\n\n    render() {\n      const { name, quote, level } = this.state;\n      const isEnabled = name.length > 0 && quote.length > 0 && level.length > 0;\n\n        return(\n            <section className='landing-page'>\n                <div className='form-section'>\n                  <h2 className='welcome-crait'>Welcome to Planet Crait</h2>\n                  <form className='landing-form'>\n                    <input className='name-input' \n                         type='text'\n                         placeholder='Name of Jedi'\n                         name='name'\n                         value={this.state.name} \n                         onChange={(e) => {this.handleChange(e)}} />\n                    <input className='quote-input' \n                         type='text'\n                         placeholder='Your favourite Star Wars quote here'\n                         name='quote'\n                         value={this.state.title} \n                         onChange={(e) => {this.handleChange(e)}}/>\n                    <div className='fandom-level-btns'>\n                      <button className='novice-btn btn' \n                              name='level' \n                              value='Novice'\n                              onClick={(e) => this.handleChange(e)}>\n                              Novice \n                      </button>\n                      <button className='intermediate-btn btn' \n                              name='level' \n                              value='Intermediate'\n                              onClick={(e) => this.handleChange(e)}>\n                              Intermediate\n                      </button>\n                      <button className='expert-btn btn' \n                              name='level' \n                              value='Expert'\n                              onClick={(e) => this.handleChange(e)}>\n                                Expert\n                      </button>\n                    </div>\n \n                    <Link to={`/movies`}><button className='submit-btn' onClick={this.updateName} disabled={!isEnabled} >Do. Or do not. Submit</button></Link>\n                  </form>\n                </div>\n            </section>\n        )\n    }\n\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route } from 'react-router-dom';\nimport { getMovieData, getCharacters } from '../../apiCalls';\nimport MoviesContainer from '../MoviesContainer/MoviesContainer';\nimport CharactersContainer from '../CharactersContainer/CharactersContainer';\nimport FavouritesContainer from '../FavouritesContainer/FavouritesContainer';\nimport LandingPage from '../LandingPage/LandingPage';\n\nclass App extends Component { \n  constructor() {\n    super();\n    this.state = {\n       movie: {},\n       characters: [],\n       name: '',\n       quote: '',\n       rank: '',\n       charactersPresent: false,\n       favourites: []\n    }\n  }\n\n  selectMovie = (movie) => {\n    getMovieData(movie)\n     .then(data => {\n      this.setState({ movie : data, moviePresent : true})\n      \n      getCharacters(this.state.movie.characters)\n        .then(data => this.setState({ characters: data , charactersPresent: true}))\n    })\n  }\n\n  setUsers = (name, quote, rank) => {\n    this.setState({\n      name: name,\n      quote: quote,\n      rank: rank\n    })\n  }\n\n  updateFavourites = (character) => {\n    this.setState({\n      favourites: [...this.state.favourites, character]\n    });\n    console.log(this.state.favourites)\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Route exact path='/' render={() => <LandingPage setUsers={this.setUsers} />} />\n        <Route exact path='/movies' render={() => <MoviesContainer selectMovie={this.selectMovie} name={this.state.name} quote={this.state.quote} rank={this.state.rank} />} />\n        <Route exact path='/movies/:id' render={() => <CharactersContainer movie={this.state.movie} charactersPresent={this.state.charactersPresent} characters={this.state.characters} name={this.state.name} quote={this.state.quote} rank={this.state.rank} updateFavourites={this.updateFavourites}/>} />\n        <Route exact path='/favourites' render={() => <FavouritesContainer name={this.state.name} quote={this.state.quote} rank={this.state.rank} favourites={this.state.favourites} updateFavourites={this.updateFavourites}/>}/>\n        \n      </main>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}